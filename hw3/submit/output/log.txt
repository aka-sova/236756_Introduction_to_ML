
----------------------------------------


Initializing model selection for task : Spreader_Detection

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.018 [min]
	Reached accuracies:
		Score : 0.645 , Params : {'n_neighbors': 3}
		Score : 0.643 , Params : {'n_neighbors': 5}
		Score : 0.612 , Params : {'n_neighbors': 50}
		Score : 0.6 , Params : {'n_neighbors': 20}
		Score : 0.597 , Params : {'n_neighbors': 10}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.019 [min]
	Reached accuracies:
		Score : 0.868 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.0 [min]
	Reached accuracies:
		Score : 0.72 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.005 [min]
	Reached accuracies:
		Score : 0.947 , Params : {'max_depth': 5}
		Score : 0.869 , Params : {'max_depth': 10}
		Score : 0.828 , Params : {'max_depth': 15}
		Score : 0.802 , Params : {'max_depth': 20}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.061 [min]
	Reached accuracies:
		Score : 0.768 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.002 [min]
	Reached accuracies:
		Score : 0.947 , Params : {}

Checking model : MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd') over params {}
Finished. Time elapsed: 0.215 [min]
	Reached accuracies:
		Score : 0.397 , Params : {}

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.267 [min]
	Reached accuracies:
		Score : 0.722 , Params : {}
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
                                      KNeighborsClassifier()                    0.683                    0.686                    0.675                    0.664
                                                 LinearSVC()                    0.784                    0.756                    0.793                    0.833
                                                GaussianNB()                    0.759                    0.765                    0.753                    0.742
                                    DecisionTreeClassifier()                    0.817                    0.753                    0.836                    0.941
                           LogisticRegression(max_iter=1000)                    0.791                    0.788                    0.789                     0.79
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))              0.817                    0.753                    0.836                    0.941
MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd')                    				0.619                    0.611                    0.623                    0.634
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)          0.836                    0.922                    0.816                    0.731
----------------------------------------


Initializing model selection for task : At_Risk_Detection

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.022 [min]
	Reached accuracies:
		Score : 0.707 , Params : {'n_neighbors': 50}
		Score : 0.704 , Params : {'n_neighbors': 20}
		Score : 0.702 , Params : {'n_neighbors': 5}
		Score : 0.7 , Params : {'n_neighbors': 3}
		Score : 0.696 , Params : {'n_neighbors': 10}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.022 [min]
	Reached accuracies:
		Score : 0.761 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.0 [min]
	Reached accuracies:
		Score : 0.828 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.005 [min]
	Reached accuracies:
		Score : 0.823 , Params : {'max_depth': 5}
		Score : 0.807 , Params : {'max_depth': 10}
		Score : 0.782 , Params : {'max_depth': 20}
		Score : 0.782 , Params : {'max_depth': 15}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.018 [min]
	Reached accuracies:
		Score : 0.826 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.002 [min]
	Reached accuracies:
		Score : 0.823 , Params : {}

Checking model : MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd') over params {}
Finished. Time elapsed: 0.198 [min]
	Reached accuracies:
		Score : 0.693 , Params : {}

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.293 [min]
	Reached accuracies:
		Score : 0.829 , Params : {}
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
                                      KNeighborsClassifier()                    0.749                    0.745                    0.739                    0.733
                                                 LinearSVC()                    0.692                    0.612                    0.758                    0.994
                                                GaussianNB()                    0.829                    0.778                    0.837                    0.906
                                    DecisionTreeClassifier()                    0.841                    0.886                    0.825                    0.771
                           LogisticRegression(max_iter=1000)                    0.836                    0.817                    0.834                    0.851
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))                    0.839                    0.881                    0.822                    0.771
MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd')                    0.744                    0.736                    0.736                    0.736
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)                    0.852                    0.887                    0.839                    0.796
----------------------------------------


Initializing model selection for task : Disease_Detection

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.051 [min]
	Reached accuracies:
		Score : 0.4 , Params : {'n_neighbors': 50}
		Score : 0.397 , Params : {'n_neighbors': 20}
		Score : 0.375 , Params : {'n_neighbors': 10}
		Score : 0.346 , Params : {'n_neighbors': 5}
		Score : 0.323 , Params : {'n_neighbors': 3}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.139 [min]
	Reached accuracies:
		Score : 0.325 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.0 [min]
	Reached accuracies:
		Score : 0.172 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.01 [min]
	Reached accuracies:
		Score : 0.575 , Params : {'max_depth': 5}
		Score : 0.541 , Params : {'max_depth': 10}
		Score : 0.497 , Params : {'max_depth': 15}
		Score : 0.482 , Params : {'max_depth': 20}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.236 [min]
	Reached accuracies:
		Score : 0.439 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.012 [min]
	Reached accuracies:
		Score : 0.581 , Params : {}

Checking model : MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd') over params {}
Finished. Time elapsed: 0.372 [min]
	Reached accuracies:
		Score : 0.491 , Params : {}

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.268 [min]
	Reached accuracies:
		Score : 0.543 , Params : {}
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
                                      KNeighborsClassifier()                    0.408                    0.404                    0.284                    0.408
                                                 LinearSVC()                    0.337                    0.365                     0.26                    0.337
                                                GaussianNB()                    0.148                    0.178                    0.051                    0.148
                                    DecisionTreeClassifier()                    0.545                    0.558                    0.525                    0.545
                           LogisticRegression(max_iter=1000)                    0.435                     0.39                    0.344                    0.435
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))                    0.584                    0.562                    0.554                    0.584
MLPClassifier(early_stopping=True, hidden_layer_sizes=(100, 100, 100),
              max_iter=100000, solver='sgd')                    0.511                    0.478                    0.457                    0.511
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)                    0.544                    0.455                    0.472                    0.544
========================================
SUMMARY
========================================

For task : Spreader_Detection
	Chosen model : (DecisionTreeClassifier(), {'max_depth': [5, 10, 15, 20]})
	Metrics : recall_score
	Value : 0.947

For task : At_Risk_Detection
	Chosen model : (RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500), {})
	Metrics : f1_score
	Value : 0.829

For task : Disease_Detection
	Chosen model : (OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)), {})
	Metrics : accuracy_score
	Value : 0.581



Evaluating best model on the test dataset

Result will be printed in : 	S:\236756_intro_machine_learning\git\hw3\wet_alex\outputs_clf\test_predicted.csv
	Task : Disease_Detection, targets were supplied. accuracy_score = 0.582
	Task : Spreader_Detection, targets were supplied. recall_score = 0.946969696969697
	Task : At_Risk_Detection, targets were supplied. f1_score = 0.861344537815126



Evaluating best model on the test dataset

Result will be printed in : 	S:\236756_intro_machine_learning\git\hw3\wet_alex\outputs_clf\unseen_predicted.csv