
----------------------------------------


Initializing model selection for task : Spreader_Detection

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.673 [min]
	Reached accuracies:
		Score : 0.701 , Params : {}

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.134 [min]
	Reached accuracies:
		Score : 0.827 , Params : {'n_neighbors': 50}
		Score : 0.823 , Params : {'n_neighbors': 5}
		Score : 0.813 , Params : {'n_neighbors': 20}
		Score : 0.81 , Params : {'n_neighbors': 3}
		Score : 0.787 , Params : {'n_neighbors': 10}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.031 [min]
	Reached accuracies:
		Score : 0.779 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.001 [min]
	Reached accuracies:
		Score : 0.772 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.019 [min]
	Reached accuracies:
		Score : 0.942 , Params : {'max_depth': 5}
		Score : 0.871 , Params : {'max_depth': 10}
		Score : 0.837 , Params : {'max_depth': 15}
		Score : 0.824 , Params : {'max_depth': 20}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.002 [min]
	Reached accuracies:
		Score : 0.778 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.005 [min]
	Reached accuracies:
		Score : 0.941 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 3.161 [min]
	Reached accuracies:
		Score : 0.791 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 7.784 [min]
	Reached accuracies:
		Score : 0.803 , Params : {}

Checking model : AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0) over params {}
Finished. Time elapsed: 2.4 [min]
	Reached accuracies:
		Score : 0.893 , Params : {}

Checking model : MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15) over params {}
Finished. Time elapsed: 4.425 [min]
	Reached accuracies:
		Best validation score: 0.8571428571428571
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)                    0.824                    0.935                    0.801                      0.7
                                      KNeighborsClassifier()                    0.814                    0.821                    0.814                    0.808
                                                 LinearSVC()                    0.769                    0.779                    0.767                    0.755
                                                GaussianNB()                    0.781                    0.806                    0.774                    0.744
                                    DecisionTreeClassifier()                    0.814                    0.759                    0.834                    0.925
                           LogisticRegression(max_iter=1000)                    0.769                    0.778                    0.767                    0.757
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))                    0.816                    0.759                    0.835                    0.927
VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))])                    0.841                    0.886                    0.833                    0.786
VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))])                    0.828                    0.843                    0.825                    0.808
AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0)                    0.851                     0.84                    0.855                     0.87
MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15)                    0.849                    0.855                    0.849                    0.843
----------------------------------------


Initializing model selection for task : At_Risk_Detection

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.669 [min]
	Reached accuracies:
		Score : 0.838 , Params : {}

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.142 [min]
	Reached accuracies:
		Score : 0.834 , Params : {'n_neighbors': 50}
		Score : 0.826 , Params : {'n_neighbors': 20}
		Score : 0.818 , Params : {'n_neighbors': 10}
		Score : 0.81 , Params : {'n_neighbors': 5}
		Score : 0.794 , Params : {'n_neighbors': 3}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.031 [min]
	Reached accuracies:
		Score : 0.834 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.001 [min]
	Reached accuracies:
		Score : 0.842 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.019 [min]
	Reached accuracies:
		Score : 0.839 , Params : {'max_depth': 5}
		Score : 0.825 , Params : {'max_depth': 10}
		Score : 0.808 , Params : {'max_depth': 15}
		Score : 0.804 , Params : {'max_depth': 20}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.003 [min]
	Reached accuracies:
		Score : 0.834 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.004 [min]
	Reached accuracies:
		Score : 0.839 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 3.421 [min]
	Reached accuracies:
		Score : 0.841 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 7.581 [min]
	Reached accuracies:
		Score : 0.82 , Params : {}

Checking model : AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0) over params {}
Finished. Time elapsed: 2.361 [min]
	Reached accuracies:
		Score : 0.853 , Params : {}

Checking model : MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15) over params {}
Finished. Time elapsed: 2.87 [min]
	Reached accuracies:
		Best validation score: 0.823170731707317
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)                    0.848                     0.91                    0.841                    0.782
                                      KNeighborsClassifier()                    0.834                    0.843                    0.838                    0.834
                                                 LinearSVC()                    0.833                    0.835                    0.839                    0.842
                                                GaussianNB()                     0.84                    0.816                    0.851                     0.89
                                    DecisionTreeClassifier()                    0.847                    0.901                    0.841                    0.788
                           LogisticRegression(max_iter=1000)                    0.832                    0.835                    0.837                     0.84
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))                    0.848                    0.903                    0.842                    0.788
VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))])                     0.84                    0.867                     0.84                    0.814
VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))])                    0.828                    0.863                    0.825                     0.79
AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0)                    0.851                    0.878                    0.851                    0.825
MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15)                    0.848                    0.861                     0.85                     0.84
----------------------------------------


Initializing model selection for task : Disease_Detection

Checking model : RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500) over params {}
Finished. Time elapsed: 0.711 [min]
	Reached accuracies:
		Score : 0.688 , Params : {}

Checking model : KNeighborsClassifier() over params {'n_neighbors': [3, 5, 10, 20, 50]}
Finished. Time elapsed: 0.14 [min]
	Reached accuracies:
		Score : 0.505 , Params : {'n_neighbors': 20}
		Score : 0.498 , Params : {'n_neighbors': 50}
		Score : 0.488 , Params : {'n_neighbors': 10}
		Score : 0.464 , Params : {'n_neighbors': 5}
		Score : 0.429 , Params : {'n_neighbors': 3}

Checking model : LinearSVC() over params {}
Finished. Time elapsed: 0.142 [min]
	Reached accuracies:
		Score : 0.549 , Params : {}

Checking model : GaussianNB() over params {}
Finished. Time elapsed: 0.001 [min]
	Reached accuracies:
		Score : 0.723 , Params : {}

Checking model : DecisionTreeClassifier() over params {'max_depth': [5, 10, 15, 20]}
Finished. Time elapsed: 0.023 [min]
	Reached accuracies:
		Score : 0.769 , Params : {'max_depth': 10}
		Score : 0.757 , Params : {'max_depth': 15}
		Score : 0.74 , Params : {'max_depth': 20}
		Score : 0.733 , Params : {'max_depth': 5}

Checking model : LogisticRegression(max_iter=1000) over params {}
Finished. Time elapsed: 0.05 [min]
	Reached accuracies:
		Score : 0.569 , Params : {}

Checking model : OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5)) over params {}
Finished. Time elapsed: 0.021 [min]
	Reached accuracies:
		Score : 0.781 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 5.236 [min]
	Reached accuracies:
		Score : 0.745 , Params : {}

Checking model : VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))]) over params {}
Finished. Time elapsed: 13.037 [min]
	Reached accuracies:
		Score : 0.705 , Params : {}

Checking model : AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0) over params {}
Finished. Time elapsed: 2.489 [min]
	Reached accuracies:
		Score : 0.81 , Params : {}

Checking model : MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15) over params {}
Finished. Time elapsed: 5.327 [min]
	Reached accuracies:
		Best validation score: 0.7395470383275261
----------------------------------------


Trying on the validation dataset with different metrics
                                                                       accuracy_score          precision_score                 f1_score             recall_score
RandomForestClassifier(max_depth=3, max_features=10, n_estimators=500)                    0.714                    0.676                    0.672                    0.714
                                      KNeighborsClassifier()                    0.513                    0.537                    0.508                    0.513
                                                 LinearSVC()                    0.557                    0.448                    0.473                    0.557
                                                GaussianNB()                     0.72                    0.738                    0.718                     0.72
                                    DecisionTreeClassifier()                    0.768                    0.771                    0.764                    0.768
                           LogisticRegression(max_iter=1000)                    0.568                    0.552                    0.534                    0.568
OneVsRestClassifier(estimator=DecisionTreeClassifier(max_depth=5))                    0.777                    0.782                    0.776                    0.777
VotingClassifier(estimators=[('mlp',
                              MLPClassifier(hidden_layer_sizes=(100, 100, 100),
                                            max_iter=100000)),
                             ('rf',
                              RandomForestClassifier(max_depth=3,
                                                     max_features=10,
                                                     n_estimators=500)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=5),
                                                 n_estimators=100))])                    0.774                    0.785                    0.768                    0.774
VotingClassifier(estimators=[('mlp1',
                              MLPClassifier(hidden_layer_sizes=(100, 150, 150,
                                                                100, 10),
                                            max_iter=150)),
                             ('mlp2',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 200,
                                                                200, 100),
                                            max_iter=150)),
                             ('mlp3',
                              MLPClassifier(hidden_layer_sizes=(50, 100, 100,
                                                                200, 100),
                                            max_iter=150)),
                             ('ada',
                              AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=4),
                                                 n_estimators=100))])                    0.733                    0.744                    0.733                    0.733
AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0)                    0.812                    0.812                    0.812                    0.812
MLPClassifier(alpha=0.0002, early_stopping=True,
              hidden_layer_sizes=(100, 1000, 1000, 100),
              learning_rate='adaptive', learning_rate_init=0.005, max_iter=1000,
              n_iter_no_change=5, random_state=1, solver='sgd',
              validation_fraction=0.15)                      0.7                    0.705                    0.699                      0.7
========================================
SUMMARY
========================================

For task : Spreader_Detection
	Chosen model : (DecisionTreeClassifier(), {'max_depth': [5, 10, 15, 20]})
	Metrics : recall_score
	Value : 0.942

For task : At_Risk_Detection
	Chosen model : (AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0), {}, True)
	Metrics : f1_score
	Value : 0.853

For task : Disease_Detection
	Chosen model : (AdaBoostClassifier(algorithm='SAMME',
                   base_estimator=DecisionTreeClassifier(max_depth=5),
                   learning_rate=0.07, n_estimators=700, random_state=0), {}, True)
	Metrics : accuracy_score
	Value : 0.81



Evaluating best model on the test dataset

Result will be printed in : 	S:\236756_intro_machine_learning\git\hw5\wet_alex\outputs_clf\test_predicted.csv
	Task : Disease_Detection, targets were supplied. accuracy_score = 0.8288888888888889
	Task : Spreader_Detection, targets were supplied. recall_score = 0.9555555555555556
	Task : At_Risk_Detection, targets were supplied. f1_score = 0.8341013824884792



Evaluating best model on the test dataset

Result will be printed in : 	S:\236756_intro_machine_learning\git\hw5\wet_alex\outputs_clf\unseen_predicted.csv